{"version":3,"sources":["../src/session.js"],"names":["Session","constructor","conf","headers","cookies","request","location","options","body","h","Cookie","getCookieHeader","returnHeaders","updateCookies","r","Object","keys","reduce","acc","key","val","s","join","extractCookies","res","current","extractCookie","c","exec","Error","setCookie"],"mappings":";;;;;;;AAAA;;;;AAEe,MAAMA,OAAN,CAAc;AAC3B;;;;;AAKAC,cAAYC,OAAO,EAAnB,EAAuB;AACrB,UAAM;AACJC,gBAAU;AADN,QAEFD,IAFJ;AAIA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAe,EAAf;AACD;;AACD,QAAMC,OAAN,CAAcC,QAAd,EAAwB;AACtBH,cAAU,EADY;AAEtB,OAAGI;AAFmB,MAGpB,EAHJ,EAGQ;AACN,UAAM;AAAEC,UAAF;AAAQL,eAASM;AAAjB,QAAuB,MAAM,eAAIH,QAAJ,EAAc,EAC/C,GAAGC,OAD4C;AAE/CJ,eAAS,EACP,GAAG,KAAKA,OADD;AAEP,WAAGA,OAFI;AAGPO,gBAAQC,gBAAgB,KAAKP,OAArB;AAHD,OAFsC;AAO/CQ,qBAAe;AAPgC,KAAd,CAAnC;AASA,SAAKR,OAAL,GAAeS,cAAc,KAAKT,OAAnB,EAA4BK,CAA5B,CAAf;AACA,WAAOF,QAAQK,aAAR,GAAwB;AAAEJ,UAAF;AAAQL,eAASM;AAAjB,KAAxB,GAA+CD,IAAtD;AACD;;AA7B0B;;;;AAgC7B,MAAMG,kBAAmBP,OAAD,IAAa;AACnC,QAAMU,IAAIC,OAAOC,IAAP,CAAYZ,OAAZ,EAAqBa,MAArB,CAA4B,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,UAAMC,MAAMhB,QAAQe,GAAR,CAAZ;AACA,UAAME,IAAK,GAAEF,GAAI,IAAGC,GAAI,EAAxB;AACA,WAAO,CAAC,GAAGF,GAAJ,EAASG,CAAT,CAAP;AACD,GAJS,EAIP,EAJO,CAAV;AAKA,SAAOP,EAAEQ,IAAF,CAAO,IAAP,CAAP;AACD,CAPD;;AASA,MAAMT,gBAAgB,CAACT,OAAD,EAAUD,OAAV,KAAsB;AAC1C,QAAMW,IAAI,EACR,GAAGV,OADK;AAER,OAAGmB,eAAepB,OAAf;AAFK,GAAV;AAIA,QAAMqB,MAAMT,OAAOC,IAAP,CAAYF,CAAZ,EAAeG,MAAf,CAAsB,CAACC,GAAD,EAAMO,OAAN,KAAkB;AAClD,UAAML,MAAMN,EAAEW,OAAF,CAAZ;AACA,QAAI,CAACL,GAAL,EAAU,OAAOF,GAAP;AACV,WAAO,EACL,GAAGA,GADE;AAEL,OAACO,OAAD,GAAWL;AAFN,KAAP;AAID,GAPW,EAOT,EAPS,CAAZ;AAQA,SAAOI,GAAP;AACD,CAdD;;AAgBA,MAAME,gBAAgBC,KAAK;AACzB,QAAMH,MAAM,gBAAgBI,IAAhB,CAAqBD,CAArB,CAAZ;AACA,MAAI,CAACH,GAAL,EAAU,MAAM,IAAIK,KAAJ,CAAW,mCAAkCF,CAAE,EAA/C,CAAN;AACV,SAAO;AACL,KAACH,IAAI,CAAJ,CAAD,GAAUA,IAAI,CAAJ;AADL,GAAP;AAGD,CAND;;AAOA,MAAMD,iBAAiB,CAAC;AAAE,gBAAcO,YAAY;AAA5B,IAAmC,EAApC,KAA2C;AAChE,SAAOA,UAAUb,MAAV,CAAiB,CAACC,GAAD,EAAMO,OAAN,KAAkB;AACxC,UAAME,IAAID,cAAcD,OAAd,CAAV;AACA,WAAO,EACL,GAAGP,GADE;AAEL,SAAGS;AAFE,KAAP;AAID,GANM,EAMJ,EANI,CAAP;AAOD,CARD;AAUA","sourcesContent":["import rqt from '.'\n\nexport default class Session {\n  /**\n   * A session can be used when requests need to be made in sequence, and rely on cookies.\n   * @param {Conf} conf Configuration object.\n   * @param {Object.<string, string>} [conf.headers] Headers to send with each request.\n   */\n  constructor(conf = {}) {\n    const {\n      headers = {},\n    } = conf\n\n    this.headers = headers\n    this.cookies = {}\n  }\n  async request(location, {\n    headers = {},\n    ...options\n  } = {}) {\n    const { body, headers: h } = await rqt(location, {\n      ...options,\n      headers: {\n        ...this.headers,\n        ...headers,\n        Cookie: getCookieHeader(this.cookies),\n      },\n      returnHeaders: true,\n    })\n    this.cookies = updateCookies(this.cookies, h)\n    return options.returnHeaders ? { body, headers: h } : body\n  }\n}\n\nconst getCookieHeader = (cookies) => {\n  const r = Object.keys(cookies).reduce((acc, key) => {\n    const val = cookies[key]\n    const s = `${key}=${val}`\n    return [...acc, s]\n  }, [])\n  return r.join('; ')\n}\n\nconst updateCookies = (cookies, headers) => {\n  const r = {\n    ...cookies,\n    ...extractCookies(headers),\n  }\n  const res = Object.keys(r).reduce((acc, current) => {\n    const val = r[current]\n    if (!val) return acc\n    return {\n      ...acc,\n      [current]: val,\n    }\n  }, {})\n  return res\n}\n\nconst extractCookie = c => {\n  const res = /^(.+?)=(.*?);/.exec(c)\n  if (!res) throw new Error(`Could not extract a cookie from ${c}`)\n  return {\n    [res[1]]: res[2],\n  }\n}\nconst extractCookies = ({ 'set-cookie': setCookie = [] } = {}) => {\n  return setCookie.reduce((acc, current) => {\n    const c = extractCookie(current)\n    return {\n      ...acc,\n      ...c,\n    }\n  }, {})\n}\n\n/**\n * @typedef {Object} Conf\n * @property {Object.<string, string>} [headers] Headers to send with each request.\n */\n"],"file":"session.js"}